version: "3.9"

services:
  app:
    container_name: devsecops-app
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      sonarqube:
        condition: service_healthy # Wait for SonarQube to be healthy before starting
    networks:
      - devsecops-net

  sonar-db:
    container_name: sonar-db
    image: postgres:15 # Make sure this version is compatible with your SonarQube version
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devsecops-net

  sonarqube:
    container_name: sonarqube
    image: sonarqube:lts-community
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_ES_JAVA_OPTS=-Xmx1g -Xms1g # Recommended for memory management
    depends_on:
      - sonar-db
    networks:
      - devsecops-net
    healthcheck:
      # Correctly formatted healthcheck using CMD-SHELL to allow pipe (|) and logical OR (||)
      test: CMD-SHELL curl -s -f http://localhost:9000/api/system/health | grep '"status":"GREEN"' || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s # Give SonarQube time to initialize before starting checks

volumes:
  postgres_data: {} # It's good practice to declare the volume driver, even if default

networks:
  devsecops-net: {} # Same for networks