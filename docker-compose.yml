services:
  sonar-db:
    image: postgres:12
    container_name: sonar-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarpass
      POSTGRES_DB: sonarqube
    volumes:
      - sonar_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 20

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      sonar-db:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      # Point SonarQube at Postgres
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonarpass
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/api/system/health | grep -q GREEN || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 60

volumes:
  sonar_db:
  sonar_data:
  sonar_extensions:
  sonar_logs:


  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: devsecops-app
    ports:
      - "3000:3000"
    depends_on:
      - sonarqube
    networks:
      - devsecops-net
